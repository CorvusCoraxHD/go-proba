name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u corvuscoraxhd --password-stdin

      - name: Build and Push Docker image
        run: |
          docker build -t ghcr.io/corvuscoraxhd/go-proba:latest .
          docker push ghcr.io/corvuscoraxhd/go-proba:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_CREDENTIALS }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
          project_id: go-proba

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Configure gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin
          gcloud container clusters get-credentials go-proba-cluster --zone us-west1-a --project hypnotic-guard-425421-m8

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Add Jetstack Helm repo
        run: helm repo add jetstack https://charts.jetstack.io && helm repo update

      - name: Install or Update cert-manager
        run: |
          kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.8.0/cert-manager.crds.yaml
          if helm ls --namespace cert-manager | grep cert-manager; then
            helm upgrade cert-manager jetstack/cert-manager --namespace cert-manager --version v1.8.0
          else
            helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.8.0
          fi
          
      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl apply -f kubernetes/ingress.yaml
          kubectl get deployment cert-manager -n cert-manager || kubectl apply -f kubernetes/cert-manager.yaml
